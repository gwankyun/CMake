``DEFAULT``
  这个特性对应于标准链接，本质上等同于不使用任何特性。它通常只与\ :prop_tgt:`LINK_LIBRARY_OVERRIDE`\
  和\ :prop_tgt:`LINK_LIBRARY_OVERRIDE_<LIBRARY>`\ 目标属性一起使用。

``WHOLE_ARCHIVE``
  强制包含静态库的所有成员。此功能仅支持以下平台，其局限性如下所示：

  * Linux.
  * 所有BSD变体.
  * SunOS.
  * 所有Apple的变种。库必须指定为CMake目标名称、库文件名（如\ ``libfoo.a``）或库文件路径\
    （如\ ``/path/to/libfoo.a``）。由于Apple链接器的限制，它不能被指定为普通的库名，比如\
    ``foo``，其中\ ``foo``\ 不是CMake目标。
  * Windows。当使用MSVC或类似MSVC的工具链时，MSVC版本必须大于1900。
  * Cygwin.
  * MSYS.

``FRAMEWORK``
  该选项告诉链接器使用\ ``-framework``\ 链接器选项搜索指定的框架。它只能在苹果平台上使用，\
  并且只能使用一个理解所使用选项的链接器（即Xcode提供的链接器，或与之兼容的链接器）。

  该框架可以指定为CMake框架目标、裸框架名称或文件路径。如果给出了一个目标，该目标必须将\
  :prop_tgt:`FRAMEWORK`\ 目标属性设置为true。对于文件路径，如果它包含目录部分，则该目录\
  将被添加为框架搜索路径。

  .. code-block:: cmake

    add_library(lib SHARED ...)
    target_link_libraries(lib PRIVATE "$<LINK_LIBRARY:FRAMEWORK,/path/to/my_framework>")

    # The constructed linker command line will contain:
    #   -F/path/to -framework my_framework

  文件路径必须符合以下模式之一（``*``\ 为通配符，可选部分显示为\ ``[...]``）：

     * ``[/path/to/]FwName[.framework]``
     * ``[/path/to/]FwName.framework/FwName[suffix]``
     * ``[/path/to/]FwName.framework/Versions/*/FwName[suffix]``

  注意，CMake识别并自动处理框架目标，即使不使用\ :genex:`$<LINK_LIBRARY:FRAMEWORK,...>`\
  表达式。生成器表达式仍然可以与CMake目标一起使用，如果项目想显式地使用它，但并不要求这样做。\
  链接器命令行在使用生成器表达式或不使用生成器表达式之间可能有一些差异，但最终结果应该是相同的。\
  另一方面，如果给出了文件路径，CMake会自动识别一些路径，但不是所有情况。项目可能需要使用\
  :genex:`$<LINK_LIBRARY:FRAMEWORK,...>`\ 的文件路径，以便预期的行为是明确的。

  .. versionadded:: 3.25
    ``FRAMEWORK``\ 特性现在支持\ :prop_tgt:`FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>`\
    目标属性以及框架库名称的\ ``suffix``。

``NEEDED_FRAMEWORK``
  这类似于\ ``FRAMEWORK``\ 特性，除了它强制链接器链接到框架，即使没有从框架中使用符号。\
  它使用\ ``-needed_framework``\ 选项，并具有与\ ``FRAMEWORK``\ 相同的链接器约束。

``REEXPORT_FRAMEWORK``
  这类似于\ ``FRAMEWORK``\ 特性，除了它告诉链接器框架应该对链接到正在创建的库的客户端可用。\
  它使用\ ``-reexport_framework``\ 选项，并具有与\ ``FRAMEWORK``\ 相同的链接器约束。

``WEAK_FRAMEWORK``
  这类似\ ``FRAMEWORK``\ 特性，除了它强制链接器将框架及其所有引用标记为弱导入。它使用\
  ``-weak_framework``\ 选项，并具有与\ ``FRAMEWORK``\ 相同的链接器约束。

``NEEDED_LIBRARY``
  这类似于\ ``NEEDED_FRAMEWORK``\ 特性，除了它用于非框架目标或库（仅限苹果平台）。它适当\
  地使用\ ``-needed_library``\ 或\ ``-needed-l``\ 选项，并具有与\ ``NEEDED_FRAMEWORK``\
  相同的链接器约束。

``REEXPORT_LIBRARY``
  这类似于\ ``REEXPORT_FRAMEWORK``\ 特性，除了它用于非框架目标或库（仅限苹果平台）。\
  它适当地使用\ ``-reexport_library``\ 或\ ``-reexport-l``\ 选项，并具有与\
  ``REEXPORT_FRAMEWORK``\ 相同的链接器约束。

``WEAK_LIBRARY``
  这类似于\ ``WEAK_FRAMEWORK``\ 特性，除了它用于非框架目标或库（仅限苹果平台）。它适当地使用\
  ``-weak_library``\ 或\ ``-weak-l``\ 选项，并具有与\ ``WEAK_FRAMEWORK``\ 相同的链接器约束。
