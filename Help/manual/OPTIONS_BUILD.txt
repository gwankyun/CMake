``-S <path-to-source>``
 要构建的CMake项目的根目录路径。

``-B <path-to-build>``
 CMake将用作构建目录的根目录路径。

 如果该目录不存在，CMake会创建该它。

``-C <initial-cache>``
 预加载一个脚本来填充缓存。

 当CMake第一次在一个空的构建树中运行时，它会创建一个 ``CMakeCache.txt`` 文件，并用项目的可定制设置填充它。此选项可用于指定一个文件，在第一次处理项目的CMake列表文件之前从该文件加载缓存项。加载的条目优先于项目的默认值。给定的文件应该是包含使用 ``CACHE`` 选项的 :command:`set` 命令的CMake脚本，而不是缓存格式的文件。

 脚本中对 :variable:`CMAKE_SOURCE_DIR` 和 :variable:`CMAKE_BINARY_DIR` 的引用将计算到顶层源码和构建树。

``-D <var>:<type>=<value>, -D <var>=<value>``
 创建或更新CMake ``CACHE`` 项。

 当CMake第一次在一个空的构建树中运行时，它会创建一个 ``CMakeCache.txt`` 文件，并用项目的可定制设置填充它。此选项可用于指定优先于项目默认值的设置。根据需要，可以对任意多的 ``CACHE`` 条目重复该选项。

 如果给定 ``:<type>`` 部分，则它必须是 :command:`set` 命令文档为其 ``CACHE`` 签名指定的类型之一。如果省略 ``:<type>`` 部分且条目未指定类型，则创建的条目没有类型。如果项目中的命令将类型设置为 ``PATH`` 或 ``FILEPATH``，那么 ``<value>`` 将被转换为绝对路径。

 该选项也可以作为单个参数使用： ``-D<var>:<type>=<value>`` 或 ``-D<var>=<value>``。

``-U <globbing_expr>``
 从CMake ``CACHE`` 中删除匹配的条目。

 这个选项可以用来从 ``CMakeCache.txt`` 文件中删除一个或多个变量，支持 ``*`` 和 ``?`` 通配符。对于多个有需要的 ``CACHE`` 条目，这个选项可以重复。

 请小心使用，它可以使你的 ``CMakeCache.txt`` 无效。

``-G <generator-name>``
 指定一个构建系统生成器。

 CMake可能在某些平台上支持多个本机构建系统。生成器负责生成特定的构建系统。支持的生成器名称在 :manual:`cmake-generators(7)` 手册中指定。

 如果没有指定，CMake将检查 :envvar:`CMAKE_GENERATOR` 环境变量，否则返回内置默认选择。

``-T <toolset-spec>``
 Toolset specification for the generator, if supported.

 Some CMake generators support a toolset specification to tell
 the native build system how to choose a compiler.  See the
 :variable:`CMAKE_GENERATOR_TOOLSET` variable for details.

``-A <platform-name>``
 Specify platform name if supported by generator.

 Some CMake generators support a platform name to be given to the
 native build system to choose a compiler or SDK.  See the
 :variable:`CMAKE_GENERATOR_PLATFORM` variable for details.

``--toolchain <path-to-file>``
 Specify the cross compiling toolchain file, equivalent to setting
 :variable:`CMAKE_TOOLCHAIN_FILE` variable.

``--install-prefix <directory>``
 Specify the installation directory, used by the
 :variable:`CMAKE_INSTALL_PREFIX` variable. Must be an absolute path.

``-Wno-dev``
 Suppress developer warnings.

 Suppress warnings that are meant for the author of the
 ``CMakeLists.txt`` files. By default this will also turn off
 deprecation warnings.

``-Wdev``
 Enable developer warnings.

 Enable warnings that are meant for the author of the ``CMakeLists.txt``
 files. By default this will also turn on deprecation warnings.

``-Werror=dev``
 Make developer warnings errors.

 Make warnings that are meant for the author of the ``CMakeLists.txt`` files
 errors. By default this will also turn on deprecated warnings as errors.

``-Wno-error=dev``
 Make developer warnings not errors.

 Make warnings that are meant for the author of the ``CMakeLists.txt`` files not
 errors. By default this will also turn off deprecated warnings as errors.

``-Wdeprecated``
 Enable deprecated functionality warnings.

 Enable warnings for usage of deprecated functionality, that are meant
 for the author of the ``CMakeLists.txt`` files.

``-Wno-deprecated``
 Suppress deprecated functionality warnings.

 Suppress warnings for usage of deprecated functionality, that are meant
 for the author of the ``CMakeLists.txt`` files.

``-Werror=deprecated``
 Make deprecated macro and function warnings errors.

 Make warnings for usage of deprecated macros and functions, that are meant
 for the author of the ``CMakeLists.txt`` files, errors.

``-Wno-error=deprecated``
 Make deprecated macro and function warnings not errors.

 Make warnings for usage of deprecated macros and functions, that are meant
 for the author of the ``CMakeLists.txt`` files, not errors.
